/*
 * App URI: CM0201053P
 * Source Location: CM0201053P.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.4584), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("CM0201053P", { 
		onPrepare: function(loader) {
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * @파일명 : CM0201053P.js
			 * @작성자 : JSYOU
			 * @작성일자 : 2023. 6. 12. 오후 6:21:14
			 * @수정로그 :
			 * [일자, 수정자] 내용
			 ************************************************/

			/************************************************
			 * 공통 모듈 선언
			 ************************************************/
			var util = createCommonUtil();

			/************************************************
			 * 전역 변수 선언
			 ************************************************/

			/************************************************
			 * 사용자 정의 함수
			 ************************************************/


			/************************************************
			 * 이벤트
			 ************************************************/

			/*
			 * 캘린더에서 date-click 이벤트 발생 시 호출.
			 * Calendar의 날짜를 클릭 했을때 발생하는 이벤트.
			 */
			function onCal1DateClick(e){
				app.openDialog("app/guide/uiConfirm/com/CM0201053P_1", {
					width: 185,
					height: 127,
					headerVisible: false,
					escKeySupport: true
				}, function(dialog){
					dialog.style.addClass("popup-calendar");
					dialog.style.overlay.addClass("bg-transparent");
				});
			}

			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(e){
				var vcCalendar = app.lookup("cal1");
				var start = moment().add(1, "days").format("YYYYMMDD");
				var end = moment().add(7, "days").format("YYYYMMDD");
				var anniversary = moment().add(4, "days").format("YYYYMMDD");
				var addDate = moment().add(6, "days").format("YYYYMMDD")

				vcCalendar.addAnniversary([{
					date: anniversary
				}, {
					date : addDate
				}]);

				vcCalendar.value = `${start},${end}`;
			}
			// End - User Script
			
			// Header
			app.supportMedia("all and (min-width: 1320px)", "edufis[default]");
			app.supportMedia("all and (min-width: 985px) and (max-width: 1319px)", "edufis[detail]");
			app.supportMedia("all and (min-width: 960px) and (max-width: 984px)", "edufis-popup[960]");
			app.supportMedia("all and (min-width: 850px) and (max-width: 959px)", "tablet");
			app.supportMedia("all and (min-width: 750px) and (max-width: 849px)", "edufis-popup[750]");
			app.supportMedia("all and (min-width: 550px) and (max-width: 749px)", "mobile");
			app.supportMedia("all and (min-width: 480px) and (max-width: 549px)", "edufis-popup[480]");
			app.supportMedia("all and (max-width: 479px)", "work-alarm");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var verticalLayout_1 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_1.spacing = 16;
			verticalLayout_1.leftMargin = 14;
			verticalLayout_1.rightMargin = 14;
			verticalLayout_1.topMargin = 14;
			verticalLayout_1.bottomMargin = 14;
			container.setLayout(verticalLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.udcComAppHeader("appHeader1");
			userDefinedControl_1.visible = false;
			container.addChild(userDefinedControl_1, {
				"autoSize": "none",
				"width": "440px",
				"height": "30px"
			});
			
			var group_1 = new cpr.controls.Container("grp2");
			group_1.style.setClasses(["card-dim"]);
			var verticalLayout_2 = new cpr.controls.layouts.VerticalLayout();
			group_1.setLayout(verticalLayout_2);
			(function(container){
				var output_1 = new cpr.controls.Output("opt1");
				output_1.value = "알림 설정을 하시면 설정하신 날짜에 문자와 이메일을 통해\r\n업무 알림을 전송해 드립니다.\r\n";
				output_1.style.setClasses(["dot-txt"]);
				container.addChild(output_1, {
					"autoSize": "height",
					"width": "100px",
					"height": "37px"
				});
				var output_2 = new cpr.controls.Output("opt3");
				output_2.value = "업무기간 중 날짜 선택만 가능합니다.";
				output_2.style.setClasses(["dot-txt"]);
				container.addChild(output_2, {
					"autoSize": "height",
					"width": "322px",
					"height": "37px"
				});
			})(group_1);
			container.addChild(group_1, {
				"autoSize": "height",
				"width": "342px",
				"height": "91px"
			});
			
			var group_2 = new cpr.controls.Container("grp4");
			var verticalLayout_3 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_3.scrollable = false;
			verticalLayout_3.spacing = 5;
			group_2.setLayout(verticalLayout_3);
			(function(container){
				var userDefinedControl_2 = new udc.com.udcComFormTitle("udcComFormTitle1");
				container.addChild(userDefinedControl_2, {
					"autoSize": "height",
					"width": "500px",
					"height": "24px"
				});
				var calendar_1 = new cpr.controls.Calendar("cal1");
				calendar_1.footerVisible = false;
				calendar_1.selectionType = "range";
				calendar_1.headerButtons = ["title", "prev", "next"];
				calendar_1.style.setClasses(["calender-range"]);
				(function(calendar_1){
					calendar_1.addItem(new cpr.controls.CalendarItem("", new Date(2023, 5, 5), new Date(2023, 5, 9)));
					calendar_1.addItem(new cpr.controls.CalendarItem("", new Date(2023, 5, 13), new Date(2023, 5, 15)));
				})(calendar_1);
				if(typeof onCal1DateClick == "function") {
					calendar_1.addEventListener("date-click", onCal1DateClick);
				}
				if(typeof onCal1ItemClick == "function") {
					calendar_1.addEventListener("item-click", onCal1ItemClick);
				}
				container.addChild(calendar_1, {
					"autoSize": "none",
					"width": "342px",
					"height": "315px"
				});
			})(group_2);
			container.addChild(group_2, {
				"autoSize": "height",
				"width": "440px",
				"height": "344px"
			});
			
			var group_3 = new cpr.controls.Container("grpFltBtns");
			group_3.style.setClasses(["pop-floating-box"]);
			var verticalLayout_4 = new cpr.controls.layouts.VerticalLayout();
			verticalLayout_4.scrollable = false;
			verticalLayout_4.leftMargin = 20;
			verticalLayout_4.rightMargin = 20;
			verticalLayout_4.topMargin = 14;
			verticalLayout_4.bottomMargin = 14;
			group_3.setLayout(verticalLayout_4);
			(function(container){
				var group_4 = new cpr.controls.Container("grpRightBtns");
				var flowLayout_1 = new cpr.controls.layouts.FlowLayout();
				flowLayout_1.scrollable = false;
				flowLayout_1.verticalSpacing = 0;
				flowLayout_1.horizontalAlign = "right";
				flowLayout_1.verticalAlign = "middle";
				group_4.setLayout(flowLayout_1);
				(function(container){
					var button_1 = new cpr.controls.Button("btn1");
					button_1.value = "취소";
					container.addChild(button_1, {
						"autoSize": "width",
						"width": "70px",
						"height": "28px"
					});
					var button_2 = new cpr.controls.Button("btnSelect");
					button_2.value = "저장";
					button_2.style.setClasses(["btn-pop-flt-confirm"]);
					container.addChild(button_2, {
						"autoSize": "width",
						"width": "70px",
						"height": "28px"
					});
				})(group_4);
				container.addChild(group_4, {
					"autoSize": "none",
					"width": "1120px",
					"height": "28px"
				});
			})(group_3);
			container.addChild(group_3, {
				"autoSize": "height",
				"width": "440px",
				"height": "56px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "나의 업무 알림 설정";
	cpr.core.Platform.INSTANCE.register(app);
})();
