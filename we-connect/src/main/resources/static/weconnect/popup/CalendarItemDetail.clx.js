/*
 * App URI: popup/CalendarItemDetail
 * Source Location: popup/CalendarItemDetail.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.4584), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("popup/CalendarItemDetail", { 
		onPrepare: function(loader) {
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * CalendarItemDetail.js
			 * Created at 2021. 1. 20. 오후 11:54:18.
			 *
			 * @author daye
			 ************************************************/



			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				
				var initValue = app.getHostProperty("initValue");
				if(initValue) {
					app.lookup("dtiFrom").dateValue = initValue["start"];
					app.lookup("dtiTo").dateValue = initValue["end"];
					
					/** @type cpr.controls.CalendarItem */
					var item = initValue["item"];
					if(item) {
						app.lookup("ipbEvent").value = item.label;
						app.lookup("txaEvent").value = item.row.getValue("description");
					} else {
						app.getHost().headerTitle = "이벤트 등록";
						app.lookup("btnDel").enabled =false;
					}
				}
			}


			/*
			 * "저장" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick2(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				
				var dmEvent = app.lookup("dmEvent");
				app.close({
					start : dmEvent.getValue("start"),
					end : dmEvent.getValue("end"),
					event : dmEvent.getValue("event"),
					description : dmEvent.getValue("description")
				})
			}


			/*
			 * "삭제" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick3(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var button = e.control;
				
				app.close("delete");
			};
			// End - User Script
			
			// Header
			var dataMap_1 = new cpr.data.DataMap("dmEvent");
			dataMap_1.parseData({
				"columns" : [
					{"name": "start"},
					{"name": "end"},
					{"name": "event"},
					{"name": "description"}
				]
			});
			app.register(dataMap_1);
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container();
			group_1.style.setClasses(["cl-form-group"]);
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.topMargin = "5px";
			formLayout_1.rightMargin = "5px";
			formLayout_1.bottomMargin = "5px";
			formLayout_1.leftMargin = "5px";
			formLayout_1.horizontalSpacing = "10px";
			formLayout_1.verticalSpacing = "10px";
			formLayout_1.horizontalSeparatorWidth = 1;
			formLayout_1.verticalSeparatorWidth = 1;
			formLayout_1.setColumns(["100px", "1fr"]);
			formLayout_1.setUseColumnShade(0, true);
			formLayout_1.setRows(["30px", "30px", "1fr"]);
			group_1.setLayout(formLayout_1);
			(function(container){
				var output_1 = new cpr.controls.Output();
				output_1.value = "날짜";
				output_1.style.setClasses(["label"]);
				container.addChild(output_1, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var output_2 = new cpr.controls.Output();
				output_2.value = "내용";
				output_2.style.setClasses(["label"]);
				container.addChild(output_2, {
					"colIndex": 0,
					"rowIndex": 2
				});
				var textArea_1 = new cpr.controls.TextArea("txaEvent");
				textArea_1.bind("value").toDataMap(app.lookup("dmEvent"), "description");
				container.addChild(textArea_1, {
					"colIndex": 1,
					"rowIndex": 2
				});
				var group_2 = new cpr.controls.Container();
				var formLayout_2 = new cpr.controls.layouts.FormLayout();
				formLayout_2.topMargin = "0px";
				formLayout_2.rightMargin = "0px";
				formLayout_2.bottomMargin = "0px";
				formLayout_2.leftMargin = "0px";
				formLayout_2.setColumns(["1fr", "10px", "1fr"]);
				formLayout_2.setRows(["1fr"]);
				group_2.setLayout(formLayout_2);
				(function(container){
					var output_3 = new cpr.controls.Output();
					output_3.value = "~";
					container.addChild(output_3, {
						"colIndex": 1,
						"rowIndex": 0
					});
					var dateInput_1 = new cpr.controls.DateInput("dtiFrom");
					dateInput_1.fieldLabel = "시작일";
					dateInput_1.userAttr({"compare": "dtiTo,<="});
					dateInput_1.bind("value").toDataMap(app.lookup("dmEvent"), "start");
					if(typeof onDtiFromValueChange == "function") {
						dateInput_1.addEventListener("value-change", onDtiFromValueChange);
					}
					if(typeof onDtiFromBeforeValueChange == "function") {
						dateInput_1.addEventListener("before-value-change", onDtiFromBeforeValueChange);
					}
					container.addChild(dateInput_1, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var dateInput_2 = new cpr.controls.DateInput("dtiTo");
					dateInput_2.fieldLabel = "종료일";
					dateInput_2.userAttr({"compare": "dtiFrom, >="});
					dateInput_2.bind("value").toDataMap(app.lookup("dmEvent"), "end");
					if(typeof onDtiToValueChange == "function") {
						dateInput_2.addEventListener("value-change", onDtiToValueChange);
					}
					container.addChild(dateInput_2, {
						"colIndex": 2,
						"rowIndex": 0
					});
				})(group_2);
				container.addChild(group_2, {
					"colIndex": 1,
					"rowIndex": 0
				});
				var output_4 = new cpr.controls.Output();
				output_4.value = "이벤트";
				output_4.style.setClasses(["label"]);
				container.addChild(output_4, {
					"colIndex": 0,
					"rowIndex": 1
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbEvent");
				inputBox_1.bind("value").toDataMap(app.lookup("dmEvent"), "event");
				container.addChild(inputBox_1, {
					"colIndex": 1,
					"rowIndex": 1
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "20px",
				"right": "20px",
				"bottom": "58px",
				"left": "20px"
			});
			
			var group_3 = new cpr.controls.Container("grpBtns");
			var formLayout_3 = new cpr.controls.layouts.FormLayout();
			formLayout_3.topMargin = "0px";
			formLayout_3.rightMargin = "0px";
			formLayout_3.bottomMargin = "0px";
			formLayout_3.leftMargin = "0px";
			formLayout_3.horizontalSpacing = "0px";
			formLayout_3.verticalSpacing = "0px";
			formLayout_3.setColumns(["80px", "80px"]);
			formLayout_3.setRows(["1fr"]);
			group_3.setLayout(formLayout_3);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSave");
				button_1.value = "저장";
				button_1.style.setClasses(["btn-success"]);
				if(typeof onButtonClick2 == "function") {
					button_1.addEventListener("click", onButtonClick2);
				}
				container.addChild(button_1, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var button_2 = new cpr.controls.Button("btnDel");
				button_2.value = "삭제";
				button_2.style.setClasses(["btn-danger"]);
				if(typeof onButtonClick3 == "function") {
					button_2.addEventListener("click", onButtonClick3);
				}
				container.addChild(button_2, {
					"colIndex": 1,
					"rowIndex": 0
				});
			})(group_3);
			container.addChild(group_3, {
				"bottom": "20px",
				"width": "160px",
				"height": "28px",
				"left": "calc(50% - 80px)"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			if(typeof onBodyPropertyChange == "function"){
				app.addEventListener("property-change", onBodyPropertyChange);
			}
		}
	});
	app.title = "상세보기";
	cpr.core.Platform.INSTANCE.register(app);
})();
