/*
 * App URI: member/GridExamFrame
 * Source Location: member/GridExamFrame.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.4584), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("member/GridExamFrame", { 
		onPrepare: function(loader) {
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsList");
			dataSet_1.parseData({
				"sortCondition": "id",
				"columns": [
					{
						"name": "id",
						"dataType": "number"
					},
					{
						"name": "first_name",
						"dataType": "string"
					},
					{"name": "last_name"},
					{"name": "email"},
					{"name": "gender"},
					{"name": "ip_address"},
					{
						"name": "FULL_NAME",
						"dataType": "expression",
						"displayOnly": true,
						"expression": "first_name+last_name"
					}
				]
			});
			app.register(dataSet_1);
			var submission_1 = new cpr.protocols.Submission("sublist");
			submission_1.action = "dev/data/GridExamData.json";
			submission_1.addResponseData(dataSet_1, false);
			app.register(submission_1);
			app.supportMedia("all and (min-width: 1024px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container();
			group_1.style.setClasses(["cl-form-group"]);
			group_1.bind("fieldLabel").toDataSet(app.lookup("dsList"), "id", 1);
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.scrollable = true;
			formLayout_1.topMargin = "5px";
			formLayout_1.rightMargin = "5px";
			formLayout_1.bottomMargin = "5px";
			formLayout_1.leftMargin = "5px";
			formLayout_1.horizontalSpacing = "10px";
			formLayout_1.verticalSpacing = "10px";
			formLayout_1.horizontalSeparatorWidth = 1;
			formLayout_1.verticalSeparatorWidth = 1;
			formLayout_1.setColumns(["100px", "1fr"]);
			formLayout_1.setUseColumnShade(0, true);
			formLayout_1.setRows(["25px", "25px", "25px", "25px", "25px", "1fr"]);
			group_1.setLayout(formLayout_1);
			(function(container){
				var inputBox_1 = linker.inputBox_1 = new cpr.controls.InputBox("ipb2");
				inputBox_1.bind("value").toDataColumn("id");
				container.addChild(inputBox_1, {
					"colIndex": 1,
					"rowIndex": 0
				});
				var inputBox_2 = linker.inputBox_2 = new cpr.controls.InputBox("ipb3");
				inputBox_2.bind("value").toDataSet(app.lookup("dsList"), "first_name", 0);
				container.addChild(inputBox_2, {
					"colIndex": 1,
					"rowIndex": 1
				});
				var inputBox_3 = linker.inputBox_3 = new cpr.controls.InputBox("ipb4");
				inputBox_3.bind("value").toDataSet(app.lookup("dsList"), "last_name", 0);
				container.addChild(inputBox_3, {
					"colIndex": 1,
					"rowIndex": 2
				});
				var inputBox_4 = linker.inputBox_4 = new cpr.controls.InputBox("ipb5");
				inputBox_4.bind("value").toDataSet(app.lookup("dsList"), "email", 0);
				container.addChild(inputBox_4, {
					"colIndex": 1,
					"rowIndex": 3
				});
				var inputBox_5 = linker.inputBox_5 = new cpr.controls.InputBox("ipb1");
				inputBox_5.bind("value").toDataSet(app.lookup("dsList"), "gender", 0);
				container.addChild(inputBox_5, {
					"colIndex": 1,
					"rowIndex": 4
				});
				var inputBox_6 = linker.inputBox_6 = new cpr.controls.InputBox("ipb6");
				inputBox_6.bind("value").toDataColumn("ip_address");
				container.addChild(inputBox_6, {
					"colIndex": 1,
					"rowIndex": 5
				});
				var output_1 = new cpr.controls.Output();
				output_1.value = "last_name";
				container.addChild(output_1, {
					"colIndex": 0,
					"rowIndex": 2
				});
				var output_2 = new cpr.controls.Output();
				output_2.value = "gender";
				container.addChild(output_2, {
					"colIndex": 0,
					"rowIndex": 4
				});
				var output_3 = new cpr.controls.Output();
				output_3.value = "email";
				container.addChild(output_3, {
					"colIndex": 0,
					"rowIndex": 3
				});
				var output_4 = new cpr.controls.Output();
				output_4.value = "ip_address";
				container.addChild(output_4, {
					"colIndex": 0,
					"rowIndex": 5
				});
				var output_5 = new cpr.controls.Output();
				output_5.value = "first_name";
				container.addChild(output_5, {
					"colIndex": 0,
					"rowIndex": 1
				});
				var output_6 = new cpr.controls.Output();
				output_6.value = "id";
				container.addChild(output_6, {
					"colIndex": 0,
					"rowIndex": 0
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "20px",
				"right": "36px",
				"bottom": "49px",
				"left": "364px"
			});
			
			var grid_1 = linker.grid_1 = new cpr.controls.Grid("grd1");
			grid_1.init({
				"dataSet": app.lookup("dsList"),
				"columns": [{"width": "100px"}],
				"header": {
					"rows": [{"height": "24px"}],
					"cells": [{
						"constraint": {"rowIndex": 0, "colIndex": 0},
						"configurator": function(cell){
							cell.filterable = false;
							cell.sortable = false;
							cell.targetColumnName = "FULL_NAME";
							cell.text = "FULL_NAME";
						}
					}]
				},
				"detail": {
					"rows": [{"height": "24px"}],
					"cells": [{
						"constraint": {"rowIndex": 0, "colIndex": 0},
						"configurator": function(cell){
							cell.columnName = "FULL_NAME";
						}
					}]
				}
			});
			container.addChild(grid_1, {
				"top": "20px",
				"bottom": "20px",
				"left": "8px",
				"width": "347px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.inputBox_1.setBindContext(new cpr.bind.GridSelectionContext(linker.grid_1));
			linker.inputBox_2.setBindContext(new cpr.bind.GridSelectionContext(linker.grid_1));
			linker.inputBox_3.setBindContext(new cpr.bind.GridSelectionContext(linker.grid_1));
			linker.inputBox_4.setBindContext(new cpr.bind.GridSelectionContext(linker.grid_1));
			linker.inputBox_5.setBindContext(new cpr.bind.GridSelectionContext(linker.grid_1));
			linker.inputBox_6.setBindContext(new cpr.bind.GridSelectionContext(linker.grid_1));
		}
	});
	app.title = "그리드 실습";
	cpr.core.Platform.INSTANCE.register(app);
})();
