/*
 * App URI: member/AttendForm
 * Source Location: member/AttendForm.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.4584), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("member/AttendForm", { 
		onPrepare: function(loader) {
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * AttendFrom.js
			 * Created at 2023. 8. 9. 오후 12:33:33.
			 *
			 * @author chwec
			 ************************************************/
			let intervalID;

			function clock() {
				const user_day = app.lookup("day");
				const date = new Date();
				const year = date.getFullYear(); // 년도 추가
				const hours = date.getHours();
				const month = date.getMonth();
				const clockDate = date.getDate();
				const day = date.getDay();
				const week = ['일', '월', '화', '수', '목', '금', '토'];
				user_day.value = `${year}년 ${month+1}월 ${clockDate}일 (${week[day]})`;
			}

			/*
			 * 루트 컨테이너에서 init 이벤트 발생 시 호출.
			 * 앱이 최초 구성될 때 발생하는 이벤트 입니다.
			 */
			function onBodyInit(e) {
				let submission = app.lookup("attend1");
				submission.send();
				app.lookup("leaveRequestListSub").send();
				clock();
				app.lookup("memberName").send();
			}

			/*
			 * 서브미션에서 submit-success 이벤트 발생 시 호출.
			 * 통신이 성공하면 발생합니다.
			 */
			function onAttend1SubmitSuccess(e) {
				var attend1 = e.control;
				let grid = app.lookup("grd1");
				grid.redraw();
				let submission = app.lookup("attend1");
				let xhr = submission.xhr.responseText;
				let data = JSON.parse(xhr);
				let tardiness = app.lookup("tardiness");
				let work = app.lookup("workInTime");
				let noShow = app.lookup("noShow");
				let attendInfo = data.attend;
				// 지각 카운트 초기화
				let tardinessCount = 0;
				
				// attendInfo 배열 순회
				for (let i = 0; i < attendInfo.length; i++) {
					// attendanceStatus가 '지각'인 경우 카운트 증가
					if (attendInfo[i].attendanceStatus === "지각") {
						tardinessCount++;
					}
				}
				
				// 결과를 표시하거나 사용하는 코드 (예: tardiness 객체에 값을 설정)
				tardiness.value = "지각\n" + tardinessCount;
				
				let workInCount = 0;
				
				for (let i = 0; i < attendInfo.length; i++) {
					if (attendInfo[i].workInTime && attendInfo[i].workInTime !== "23:50") {
						workInCount++;
					}
				}
				work.value = "출근\n" + workInCount;
				
				//결근카운트 
				let absenceCount = 0;
				
				for (let i = 0; i < attendInfo.length; i++) {
					// attendanceStatus가 '지각'인 경우 카운트 증가
					if (attendInfo[i].attendanceStatus === "결근") {
						absenceCount++;
					}
				}
				noShow.value = "결근\n" + absenceCount;
				
			}

			/*
			 * 아웃풋에서 value-change 이벤트 발생 시 호출.
			 * Output의 value를 변경하여 변경된 값이 저장된 후에 발생하는 이벤트.
			 */
			function onOutputValueChange(e) {
				var output = e.control;
			}

			/*
			 * 서브미션에서 submit-success 이벤트 발생 시 호출.
			 * 통신이 성공하면 발생합니다.
			 */
			function onMemberNameSubmitSuccess(e) {
				var memberName = e.control;
				let submission = app.lookup("memberName");
				let xhr = submission.xhr.responseText;
				let data = JSON.parse(xhr);
				let member1 = app.lookup("name");
				let leaveCount = app.lookup("leave");
				let memberInfo = data.memberList[0];
				let memberNameValue = memberInfo.memberName;
				let position = memberInfo.position;
				let formattedMemberName = memberNameValue + position + "님";
				let memberLeaveCount = memberInfo.leaveCount;
				console.log(memberLeaveCount);
				leaveCount.value = "연차 갯수\n" + memberLeaveCount;
				member1.value = formattedMemberName;
				
			}

			/*
			 * "출근" 버튼(work)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onWorkClick(e) {
				var work = e.control;
				if (confirm("출근처리하시겠습니까")) {
					let submission = app.lookup("Attendance1");
					submission.send();
				}
			}

			/*
			 * "퇴근" 버튼(workOut)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onWorkOutClick(e) {
				var workOut = e.control;
				if (confirm("퇴근하시겠습니까?")) {
					let UpdateAttendance = app.lookup("UpdateAttendance");
					UpdateAttendance.send();
				}
			}

			/*
			 * 서브미션에서 submit-success 이벤트 발생 시 호출.
			 * 통신이 성공하면 발생합니다.
			 */
			function onAttendance1SubmitSuccess2(e){
				var attendance1 = e.control;
				app.lookup("grd1").redraw();
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("attend");
			dataSet_1.parseData({
				"columns": [
					{
						"name": "workInTime",
						"dataType": "string"
					},
					{
						"name": "workOutTime",
						"dataType": "string"
					},
					{
						"name": "workDay",
						"dataType": "string"
					},
					{
						"name": "attendanceStatus",
						"dataType": "string"
					},
					{
						"name": "memberName",
						"dataType": "string"
					}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("leaveRequestList");
			dataSet_2.parseData({
				"columns" : [
					{
						"name": "leaveRequestId",
						"dataType": "number"
					},
					{
						"name": "memberId",
						"dataType": "number"
					},
					{
						"name": "memberName",
						"dataType": "string"
					},
					{
						"name": "position",
						"dataType": "string"
					},
					{
						"name": "departmentName",
						"dataType": "string"
					},
					{
						"name": "leaveRequestReason",
						"dataType": "string"
					},
					{
						"name": "leaveRequestStart",
						"dataType": "string"
					},
					{
						"name": "leaveRequestEnd",
						"dataType": "string"
					},
					{"name": "formattedLeaveCount"},
					{
						"name": "leaveRequestType",
						"dataType": "string"
					},
					{
						"name": "leaveRequestStatus",
						"dataType": "string"
					}
				]
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("memberList");
			dataSet_3.parseData({
				"columns" : [
					{
						"name": "memberId",
						"dataType": "string"
					},
					{
						"name": "memberName",
						"dataType": "string"
					},
					{
						"name": "position",
						"dataType": "string"
					},
					{
						"name": "departmentName",
						"dataType": "string"
					},
					{
						"name": "leaveCount",
						"dataType": "string"
					}
				]
			});
			app.register(dataSet_3);
			var submission_1 = new cpr.protocols.Submission("attend1");
			submission_1.method = "get";
			submission_1.action = "member/attendance";
			submission_1.addResponseData(dataSet_1, false);
			if(typeof onAttend1SubmitSuccess == "function") {
				submission_1.addEventListener("submit-success", onAttend1SubmitSuccess);
			}
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("leaveRequestListSub");
			submission_2.async = false;
			submission_2.method = "get";
			submission_2.action = "admin/leave-request";
			submission_2.addResponseData(dataSet_2, false);
			if(typeof onLeaveRequestListSubSubmitSuccess2 == "function") {
				submission_2.addEventListener("submit-success", onLeaveRequestListSubSubmitSuccess2);
			}
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("memberName");
			submission_3.method = "get";
			submission_3.action = "member/Name";
			submission_3.addResponseData(dataSet_3, false);
			if(typeof onMemberNameSubmitSuccess == "function") {
				submission_3.addEventListener("submit-success", onMemberNameSubmitSuccess);
			}
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("Attendance1");
			submission_4.action = "member/attendance";
			if(typeof onAttendance1SubmitSuccess2 == "function") {
				submission_4.addEventListener("submit-success", onAttendance1SubmitSuccess2);
			}
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("UpdateAttendance");
			submission_5.method = "put";
			submission_5.action = "member/attendance";
			app.register(submission_5);
			app.supportMedia("all and (min-width: 1920px)", "Project");
			app.supportMedia("all and (min-width: 1024px) and (max-width: 1919px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container();
			group_1.style.css({
				"border-radius" : "8px"
			});
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var grid_1 = new cpr.controls.Grid("grd1");
				grid_1.init({
					"dataSet": app.lookup("attend"),
					"columns": [
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"}
					],
					"header": {
						"rows": [{"height": "50px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "날짜";
									cell.style.css({
										"border-right-style" : "solid",
										"border-top-width" : "1px",
										"border-bottom-color" : "#bfbfbf",
										"border-left-style" : "solid",
										"border-right-width" : "1px",
										"border-bottom-width" : "1px",
										"border-left-color" : "#bfbfbf",
										"border-top-color" : "#bfbfbf",
										"border-bottom-style" : "solid",
										"border-right-color" : "#bfbfbf",
										"border-left-width" : "1px",
										"border-top-style" : "solid"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "출근";
									cell.style.css({
										"border-right-style" : "solid",
										"border-top-width" : "1px",
										"border-bottom-color" : "#bfbfbf",
										"border-left-style" : "solid",
										"border-right-width" : "1px",
										"border-bottom-width" : "1px",
										"border-left-color" : "#bfbfbf",
										"border-top-color" : "#bfbfbf",
										"border-bottom-style" : "solid",
										"border-right-color" : "#bfbfbf",
										"border-left-width" : "1px",
										"border-top-style" : "solid"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "퇴근";
									cell.style.css({
										"border-right-style" : "solid",
										"border-top-width" : "1px",
										"border-bottom-color" : "#bfbfbf",
										"border-left-style" : "solid",
										"border-right-width" : "1px",
										"border-bottom-width" : "1px",
										"border-left-color" : "#bfbfbf",
										"border-top-color" : "#bfbfbf",
										"border-bottom-style" : "solid",
										"border-right-color" : "#bfbfbf",
										"border-left-width" : "1px",
										"border-top-style" : "solid"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.text = "이름";
									cell.style.css({
										"border-right-style" : "solid",
										"border-bottom-color" : "#bfbfbf",
										"border-top-width" : "1px",
										"border-left-style" : "solid",
										"border-right-width" : "1px",
										"border-left-color" : "#bfbfbf",
										"border-bottom-width" : "1px",
										"border-top-color" : "#bfbfbf",
										"border-right-color" : "#bfbfbf",
										"border-bottom-style" : "solid",
										"border-left-width" : "1px",
										"border-top-style" : "solid"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.text = "출결상태";
									cell.style.css({
										"border-right-style" : "solid",
										"border-top-width" : "1px",
										"border-bottom-color" : "#bfbfbf",
										"border-left-style" : "solid",
										"border-right-width" : "1px",
										"border-bottom-width" : "1px",
										"border-left-color" : "#bfbfbf",
										"border-top-color" : "#bfbfbf",
										"border-bottom-style" : "solid",
										"border-right-color" : "#bfbfbf",
										"border-left-width" : "1px",
										"border-top-style" : "solid"
									});
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "35px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnName = "workDay";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "workInTime";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "workOutTime";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "memberName";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "attendanceStatus";
									cell.style.css({
										"border-radius" : "0px",
										"color" : "#333333"
									});
								}
							}
						]
					}
				});
				grid_1.style.header.css({
					"font-weight" : "800",
					"background-image" : "none"
				});
				container.addChild(grid_1, {
					"top": "177px",
					"right": "0px",
					"bottom": "3px",
					"left": "0px"
				});
				var group_2 = new cpr.controls.Container();
				group_2.style.css({
					"border-right-style" : "solid",
					"border-top-width" : "1px",
					"border-bottom-color" : "#ffe6e1",
					"border-right-width" : "1px",
					"border-left-color" : "#ffe6e1",
					"border-right-color" : "#ffe6e1",
					"border-left-width" : "1px",
					"border-top-style" : "solid",
					"background-color" : "#E9E9E9",
					"border-radius" : "8px",
					"border-left-style" : "solid",
					"border-bottom-width" : "1px",
					"border-top-color" : "#ffe6e1",
					"border-bottom-style" : "solid"
				});
				var xYLayout_3 = new cpr.controls.layouts.XYLayout();
				group_2.setLayout(xYLayout_3);
				(function(container){
					var hTMLSnippet_1 = new cpr.controls.HTMLSnippet("day");
					hTMLSnippet_1.style.css({
						"color" : "#6B6A6A",
						"font-weight" : "600",
						"font-size" : "20px",
						"text-align" : "center"
					});
					container.addChild(hTMLSnippet_1, {
						"top": "3px",
						"bottom": "0px",
						"width": "400px",
						"left": "calc(50% - 200px)"
					});
				})(group_2);
				container.addChild(group_2, {
					"top": "0px",
					"right": "0px",
					"left": "0px",
					"height": "42px"
				});
				var group_3 = new cpr.controls.Container();
				var xYLayout_4 = new cpr.controls.layouts.XYLayout();
				group_3.setLayout(xYLayout_4);
				(function(container){
					var group_4 = new cpr.controls.Container();
					group_4.style.css({
						"border-right-style" : "solid",
						"border-top-width" : "1px",
						"border-bottom-color" : "#bfbfbf",
						"border-right-width" : "1px",
						"border-left-color" : "#bfbfbf",
						"border-right-color" : "#bfbfbf",
						"border-left-width" : "1px",
						"border-top-style" : "solid",
						"border-radius" : "10px",
						"border-left-style" : "solid",
						"border-bottom-width" : "1px",
						"border-top-color" : "#bfbfbf",
						"border-bottom-style" : "solid"
					});
					var formLayout_1 = new cpr.controls.layouts.FormLayout();
					formLayout_1.scrollable = false;
					formLayout_1.topMargin = "0px";
					formLayout_1.rightMargin = "0px";
					formLayout_1.bottomMargin = "0px";
					formLayout_1.leftMargin = "0px";
					formLayout_1.horizontalSpacing = "0px";
					formLayout_1.verticalSpacing = "0px";
					formLayout_1.setColumns(["250px", "1fr", "1fr", "1fr", "1fr", "100px", "100px"]);
					formLayout_1.setRows(["100px", "1fr"]);
					group_4.setLayout(formLayout_1);
					(function(container){
						var button_1 = new cpr.controls.Button("workOut");
						button_1.value = "퇴근";
						button_1.style.css({
							"background-color" : "#FFE6E1",
							"background-image" : "none"
						});
						if(typeof onWorkOutClick == "function") {
							button_1.addEventListener("click", onWorkOutClick);
						}
						container.addChild(button_1, {
							"colIndex": 6,
							"rowIndex": 0
						});
						var button_2 = new cpr.controls.Button("work");
						button_2.value = "출근";
						button_2.style.css({
							"background-color" : "#E0E1E2",
							"background-image" : "none"
						});
						if(typeof onWorkClick == "function") {
							button_2.addEventListener("click", onWorkClick);
						}
						container.addChild(button_2, {
							"colIndex": 5,
							"rowIndex": 0
						});
						var output_1 = new cpr.controls.Output("tardiness");
						output_1.value = "지각";
						output_1.style.css({
							"border-radius" : "8px",
							"border-right-style" : "solid",
							"color" : "#FF8E8E",
							"border-right-width" : "1px",
							"font-size" : "25px",
							"border-right-color" : "#bfbfbf",
							"text-align" : "center"
						});
						container.addChild(output_1, {
							"colIndex": 3,
							"rowIndex": 0
						});
						var output_2 = new cpr.controls.Output();
						output_2.value = "Output";
						output_2.style.css({
							"border-right-style" : "solid",
							"border-top-width" : "1px",
							"border-bottom-color" : "#bfbfbf",
							"border-right-width" : "1px",
							"border-left-color" : "#bfbfbf",
							"font-size" : "25px",
							"border-right-color" : "#bfbfbf",
							"border-left-width" : "1px",
							"border-top-style" : "solid",
							"border-radius" : "8px",
							"border-left-style" : "solid",
							"border-bottom-width" : "1px",
							"border-top-color" : "#bfbfbf",
							"border-bottom-style" : "solid",
							"text-align" : "center"
						});
						container.addChild(output_2, {
							"colIndex": 0,
							"rowIndex": 1
						});
						var output_3 = new cpr.controls.Output("workInTime");
						output_3.value = "출근";
						output_3.style.css({
							"border-radius" : "8px",
							"border-right-style" : "solid",
							"border-right-width" : "1px",
							"font-size" : "25px",
							"border-right-color" : "#bfbfbf",
							"text-align" : "center"
						});
						container.addChild(output_3, {
							"colIndex": 2,
							"rowIndex": 0
						});
						var output_4 = new cpr.controls.Output("noShow");
						output_4.value = "결근";
						output_4.style.css({
							"border-radius" : "8px",
							"color" : "#FF8E8E",
							"font-size" : "25px",
							"text-align" : "center"
						});
						container.addChild(output_4, {
							"colIndex": 4,
							"rowIndex": 0
						});
						var output_5 = new cpr.controls.Output("leave");
						output_5.value = "휴가";
						output_5.style.css({
							"border-radius" : "8px",
							"border-right-style" : "solid",
							"color" : "#49A9FF",
							"border-right-width" : "1px",
							"font-size" : "25px",
							"border-right-color" : "#bfbfbf",
							"text-align" : "center"
						});
						container.addChild(output_5, {
							"colIndex": 1,
							"rowIndex": 0,
							"colSpan": 1,
							"rowSpan": 1
						});
						var output_6 = new cpr.controls.Output("name");
						output_6.value = "이름";
						output_6.style.css({
							"border-radius" : "8px",
							"border-right-style" : "solid",
							"border-right-width" : "1px",
							"font-size" : "25px",
							"border-right-color" : "#bfbfbf",
							"text-align" : "center"
						});
						container.addChild(output_6, {
							"colIndex": 0,
							"rowIndex": 0,
							"colSpan": 1,
							"rowSpan": 1
						});
					})(group_4);
					container.addChild(group_4, {
						"top": "0px",
						"right": "0px",
						"bottom": "0px",
						"left": "0px"
					});
				})(group_3);
				container.addChild(group_3, {
					"top": "61px",
					"right": "0px",
					"left": "0px",
					"height": "106px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "0px",
				"right": "0px",
				"bottom": "0px",
				"left": "0px"
			});
			if(typeof onBodyInit == "function"){
				app.addEventListener("init", onBodyInit);
			}
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			if(typeof onBodyBeforeUnload == "function"){
				app.addEventListener("before-unload", onBodyBeforeUnload);
			}
		}
	});
	app.title = "AttendForm";
	cpr.core.Platform.INSTANCE.register(app);
})();
