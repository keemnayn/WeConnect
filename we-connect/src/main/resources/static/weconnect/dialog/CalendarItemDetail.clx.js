/*
 * App URI: dialog/CalendarItemDetail
 * Source Location: dialog/CalendarItemDetail.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.4584), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("dialog/CalendarItemDetail", { 
		onPrepare: function(loader) {
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * Untitled.js
			 * Created at 2023. 8. 7. 오전 10:51:08.
			 *
			 * @author Axl Rose
			 ************************************************/

			/*
			 * "저장" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick(e) {
				var button = e.control;
				var calendarItemInsertSub = app.lookup("calendarItemInsertSub");
				var projectName = app.lookup("categoryCmb");
				var projectStrat = app.lookup("dtiFrom");
				var projectEnd = app.lookup("dtiTo");
				calendarItemInsertSub.send();
			}

			/*
			 * "취소" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick2(e) {
				var button = e.control;
				app.close();
			}

			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(e) {
				var comboBox = app.lookup("categoryCmb");
				comboBox.fieldLabel = "프로젝트";
				comboBox.value = "프로젝트";
			}

			/*
			 * 서브미션에서 submit-success 이벤트 발생 시 호출.
			 * 통신이 성공하면 발생합니다.
			 */
			function onCalendarItemInsertSubSubmitSuccess(e) {
				var calendarItemInsertSub = e.control;
				app.close(true);
			}
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("category");
			dataSet_1.parseData({
				"columns": [
					{
						"name": "label",
						"dataType": "string"
					},
					{"name": "value"}
				],
				"rows": [
					{"label": "프로젝트", "value": "프로젝트"},
					{"label": "회의", "value": "회의"},
					{"label": "보고", "value": "보고"},
					{"label": "외부", "value": "외부"},
					{"label": "교육", "value": "교육"},
					{"label": "기타", "value": "기타"}
				]
			});
			app.register(dataSet_1);
			var dataMap_1 = new cpr.data.DataMap("dmCalendar");
			dataMap_1.parseData({
				"columns" : [
					{"name": "projectStart"},
					{"name": "projectEnd"},
					{"name": "projectName"}
				]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("calendarItemInsertSub");
			submission_1.action = "member/project";
			submission_1.addRequestData(dataMap_1);
			if(typeof onCalendarItemInsertSubSubmitSuccess == "function") {
				submission_1.addEventListener("submit-success", onCalendarItemInsertSubSubmitSuccess);
			}
			app.register(submission_1);
			app.supportMedia("all and (min-width: 1920px)", "Project");
			app.supportMedia("all and (min-width: 1024px) and (max-width: 1919px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container();
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.scrollable = false;
			formLayout_1.topMargin = "5px";
			formLayout_1.rightMargin = "5px";
			formLayout_1.bottomMargin = "5px";
			formLayout_1.leftMargin = "5px";
			formLayout_1.horizontalSpacing = "10px";
			formLayout_1.verticalSpacing = "10px";
			formLayout_1.setColumns(["100px", "1fr"]);
			formLayout_1.setRows(["1fr"]);
			group_1.setLayout(formLayout_1);
			(function(container){
				var output_1 = new cpr.controls.Output();
				output_1.value = "일정구분";
				container.addChild(output_1, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var comboBox_1 = new cpr.controls.ComboBox("categoryCmb");
				comboBox_1.style.css({
					"color" : "#080808",
					"font-size" : "15px",
					"font-style" : "normal"
				});
				var dataMapContext_1 = new cpr.bind.DataMapContext(app.lookup("dmCalendar"));
				comboBox_1.setBindContext(dataMapContext_1);
				comboBox_1.bind("value").toDataMap(app.lookup("dmCalendar"), "projectName");
				(function(comboBox_1){
					comboBox_1.setItemSet(app.lookup("category"), {
						"label": "label",
						"value": "value"
					});
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"colIndex": 1,
					"rowIndex": 0
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "90px",
				"right": "20px",
				"left": "20px",
				"height": "50px"
			});
			
			var button_1 = new cpr.controls.Button();
			button_1.value = "취소";
			button_1.style.css({
				"text-align" : "center"
			});
			if(typeof onButtonClick2 == "function") {
				button_1.addEventListener("click", onButtonClick2);
			}
			container.addChild(button_1, {
				"right": "170px",
				"bottom": "20px",
				"left": "330px",
				"height": "30px"
			});
			
			var button_2 = new cpr.controls.Button("createBtn");
			button_2.value = "저장";
			button_2.style.css({
				"text-align" : "center"
			});
			if(typeof onButtonClick == "function") {
				button_2.addEventListener("click", onButtonClick);
			}
			container.addChild(button_2, {
				"right": "330px",
				"bottom": "20px",
				"left": "170px",
				"height": "30px"
			});
			
			var group_2 = new cpr.controls.Container();
			var formLayout_2 = new cpr.controls.layouts.FormLayout();
			formLayout_2.scrollable = false;
			formLayout_2.topMargin = "5px";
			formLayout_2.rightMargin = "5px";
			formLayout_2.bottomMargin = "5px";
			formLayout_2.leftMargin = "5px";
			formLayout_2.horizontalSpacing = "10px";
			formLayout_2.verticalSpacing = "10px";
			formLayout_2.setColumns(["1fr"]);
			formLayout_2.setRows(["1fr"]);
			group_2.setLayout(formLayout_2);
			(function(container){
				var output_2 = new cpr.controls.Output();
				output_2.value = "프로젝트 일정";
				container.addChild(output_2, {
					"colIndex": 0,
					"rowIndex": 0
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "30px",
				"left": "20px",
				"width": "150px",
				"height": "40px"
			});
			
			var group_3 = new cpr.controls.Container();
			var formLayout_3 = new cpr.controls.layouts.FormLayout();
			formLayout_3.scrollable = false;
			formLayout_3.topMargin = "5px";
			formLayout_3.rightMargin = "5px";
			formLayout_3.bottomMargin = "5px";
			formLayout_3.leftMargin = "5px";
			formLayout_3.horizontalSpacing = "10px";
			formLayout_3.verticalSpacing = "10px";
			formLayout_3.setColumns(["100px", "1fr"]);
			formLayout_3.setRows(["1fr"]);
			group_3.setLayout(formLayout_3);
			(function(container){
				var output_3 = new cpr.controls.Output();
				output_3.value = "날짜";
				container.addChild(output_3, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var group_4 = new cpr.controls.Container();
				var formLayout_4 = new cpr.controls.layouts.FormLayout();
				formLayout_4.topMargin = "0px";
				formLayout_4.rightMargin = "0px";
				formLayout_4.bottomMargin = "0px";
				formLayout_4.leftMargin = "0px";
				formLayout_4.setColumns(["1fr", "10px", "1fr"]);
				formLayout_4.setRows(["1fr"]);
				group_4.setLayout(formLayout_4);
				(function(container){
					var output_4 = new cpr.controls.Output();
					output_4.value = "~";
					container.addChild(output_4, {
						"colIndex": 1,
						"rowIndex": 0
					});
					var dateInput_1 = new cpr.controls.DateInput("dtiFrom");
					dateInput_1.fieldLabel = "시작일";
					dateInput_1.userAttr({"compare": "dtiTo,<="});
					var dataMapContext_2 = new cpr.bind.DataMapContext(app.lookup("dmCalendar"));
					dateInput_1.setBindContext(dataMapContext_2);
					dateInput_1.bind("value").toDataMap(app.lookup("dmCalendar"), "projectStart");
					container.addChild(dateInput_1, {
						"colIndex": 0,
						"rowIndex": 0
					});
					var dateInput_2 = new cpr.controls.DateInput("dtiTo");
					dateInput_2.fieldLabel = "종료일";
					dateInput_2.userAttr({"compare": "dtiFrom, >="});
					var dataMapContext_3 = new cpr.bind.DataMapContext(app.lookup("dmCalendar"));
					dateInput_2.setBindContext(dataMapContext_3);
					dateInput_2.bind("value").toDataMap(app.lookup("dmCalendar"), "projectEnd");
					container.addChild(dateInput_2, {
						"colIndex": 2,
						"rowIndex": 0
					});
				})(group_4);
				container.addChild(group_4, {
					"colIndex": 1,
					"rowIndex": 0
				});
			})(group_3);
			container.addChild(group_3, {
				"top": "160px",
				"right": "20px",
				"left": "20px",
				"height": "50px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "일정 관리 팝업";
	cpr.core.Platform.INSTANCE.register(app);
})();
