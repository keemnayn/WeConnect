/*
 * App URI: dialog/MemberUpdate
 * Source Location: dialog/MemberUpdate.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.4584), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("dialog/MemberUpdate", { 
		onPrepare: function(loader) {
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * MemberUpdate.js
			 * Created at 2023. 8. 18. 오후 2:26:42.
			 *
			 * @author Axl Rose
			 ************************************************/

			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(e) {
				app.lookup("departmentNameSub").send();
			}

			/*
			 * "수정" 버튼(updateBtn)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onUpdateBtnClick(e) {
				var updateBtn = e.control;
				var updateBtn = e.control;
				var submission = app.lookup("updateMemberSub");
				var memberName = app.lookup("memberNameIpb").value;
				var position = app.lookup("positionCmb").value;
				var departmentName = app.lookup("departmentNameCmb").value;
				if (!memberName || !position || !departmentName) {
					alert("회원의 이름, 직급, 부서를 모두 입력해주세요.");
				} else {
					submission.send();
				}
			}

			/*
			 * 서브미션에서 submit-success 이벤트 발생 시 호출.
			 * 통신이 성공하면 발생합니다.
			 */
			function onDepartmentNameSubSubmitSuccess(e) {
				var departmentNameSub = e.control;
				var hostProperty = app.getHostProperty("initValue");
				var memberId = hostProperty["memberId"];
				var memberName = hostProperty["memberName"];
				var position = hostProperty["position"];
				var departmentId = hostProperty["departmentId"];
				var departmentName = hostProperty["departmentName"];
				console.log(departmentName);
				app.lookup("memberIdOutput").value = memberId;
				app.lookup("memberNameIpb").value = memberName;
				app.lookup("positionCmb").value = position;
				var comboBox = app.lookup("departmentNameCmb");
				comboBox.fieldLabel = departmentName;
				comboBox.value = departmentId;
				console.log(departmentId);
			}

			/*
			 * "취소" 버튼(cancelBtn)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onCancelBtnClick(e) {
				var cancelBtn = e.control;
				app.close();
			}

			/*
			 * 서브미션에서 submit-success 이벤트 발생 시 호출.
			 * 통신이 성공하면 발생합니다.
			 */
			function onUpdateMemberSubSubmitSuccess(e) {
				var updateMemberSub = e.control;
				app.close();
			}
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("positionList");
			dataSet_1.parseData({
				"columns": [
					{"name": "label"},
					{"name": "value"}
				],
				"rows": [
					{"label": "사원", "value": "사원"},
					{"label": "주임", "value": "주임"},
					{"label": "대리", "value": "대리"},
					{"label": "과장", "value": "과장"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("departmentList");
			dataSet_2.parseData({
				"columns" : [
					{
						"name": "departmentId",
						"dataType": "number"
					},
					{"name": "departmentName"}
				]
			});
			app.register(dataSet_2);
			var dataMap_1 = new cpr.data.DataMap("updateMemberParam");
			dataMap_1.parseData({
				"columns" : [
					{"name": "memberId"},
					{"name": "memberName"},
					{"name": "position"},
					{"name": "departmentId"}
				]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("departmentNameSub");
			submission_1.method = "get";
			submission_1.action = "member";
			submission_1.addResponseData(dataSet_2, false);
			if(typeof onDepartmentNameSubSubmitSuccess == "function") {
				submission_1.addEventListener("submit-success", onDepartmentNameSubSubmitSuccess);
			}
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("updateMemberSub");
			submission_2.method = "put";
			submission_2.action = "admin/members";
			submission_2.addRequestData(dataMap_1);
			if(typeof onUpdateMemberSubSubmitSuccess == "function") {
				submission_2.addEventListener("submit-success", onUpdateMemberSubSubmitSuccess);
			}
			app.register(submission_2);
			app.supportMedia("all and (min-width: 1920px)", "new-screen");
			app.supportMedia("all and (min-width: 1024px) and (max-width: 1919px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var output_1 = new cpr.controls.Output();
			output_1.value = "회원 정보 수정";
			container.addChild(output_1, {
				"top": "10px",
				"right": "430px",
				"left": "100px",
				"height": "50px"
			});
			
			var button_1 = new cpr.controls.Button("updateBtn");
			button_1.value = "수정";
			if(typeof onUpdateBtnClick == "function") {
				button_1.addEventListener("click", onUpdateBtnClick);
			}
			container.addChild(button_1, {
				"right": "340px",
				"bottom": "20px",
				"left": "100px",
				"height": "50px"
			});
			
			var button_2 = new cpr.controls.Button("cancelBtn");
			button_2.value = "취소";
			if(typeof onCancelBtnClick == "function") {
				button_2.addEventListener("click", onCancelBtnClick);
			}
			container.addChild(button_2, {
				"right": "100px",
				"bottom": "20px",
				"left": "340px",
				"height": "50px"
			});
			
			var inputBox_1 = new cpr.controls.InputBox("memberNameIpb");
			var dataMapContext_1 = new cpr.bind.DataMapContext(app.lookup("updateMemberParam"));
			inputBox_1.setBindContext(dataMapContext_1);
			inputBox_1.bind("value").toDataMap(app.lookup("updateMemberParam"), "memberName");
			container.addChild(inputBox_1, {
				"top": "80px",
				"right": "120px",
				"left": "120px",
				"height": "50px"
			});
			
			var comboBox_1 = new cpr.controls.ComboBox("positionCmb");
			var dataMapContext_2 = new cpr.bind.DataMapContext(app.lookup("updateMemberParam"));
			comboBox_1.setBindContext(dataMapContext_2);
			comboBox_1.bind("value").toDataMap(app.lookup("updateMemberParam"), "position");
			(function(comboBox_1){
				comboBox_1.setItemSet(app.lookup("positionList"), {
					"label": "label",
					"value": "value"
				});
			})(comboBox_1);
			container.addChild(comboBox_1, {
				"top": "180px",
				"right": "120px",
				"left": "120px",
				"height": "50px"
			});
			
			var output_2 = new cpr.controls.Output("memberIdTextOutput");
			output_2.value = "회원번호:";
			container.addChild(output_2, {
				"top": "10px",
				"right": "230px",
				"left": "340px",
				"height": "50px"
			});
			
			var output_3 = new cpr.controls.Output("memberIdOutput");
			var dataMapContext_3 = new cpr.bind.DataMapContext(app.lookup("updateMemberParam"));
			output_3.setBindContext(dataMapContext_3);
			output_3.bind("value").toDataMap(app.lookup("updateMemberParam"), "memberId");
			container.addChild(output_3, {
				"top": "10px",
				"right": "110px",
				"left": "430px",
				"height": "50px"
			});
			
			var comboBox_2 = new cpr.controls.ComboBox("departmentNameCmb");
			var dataMapContext_4 = new cpr.bind.DataMapContext(app.lookup("updateMemberParam"));
			comboBox_2.setBindContext(dataMapContext_4);
			comboBox_2.bind("value").toDataMap(app.lookup("updateMemberParam"), "departmentId");
			(function(comboBox_2){
				comboBox_2.setItemSet(app.lookup("departmentList"), {
					"label": "departmentName",
					"value": "departmentId"
				});
			})(comboBox_2);
			container.addChild(comboBox_2, {
				"top": "280px",
				"right": "120px",
				"left": "120px",
				"height": "50px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "회원 수정 팝업";
	cpr.core.Platform.INSTANCE.register(app);
})();
