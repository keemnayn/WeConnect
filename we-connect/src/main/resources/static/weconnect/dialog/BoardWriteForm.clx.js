/*
 * App URI: dialog/BoardWriteForm
 * Source Location: dialog/BoardWriteForm.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.4584), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("dialog/BoardWriteForm", { 
		onPrepare: function(loader) {
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * writeForm.js
			 * Created at 2023. 8. 14. 오후 3:43:26.
			 *
			 * @author chwec
			 ************************************************/

			/*
			 * "취소" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick(e){
				var button = e.control;
				app.close(false);
			}

			/*
			 * "등록" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick2(e){
				var button = e.control;
				app.lookup("boardSub").send();
			}

			/*
			 * 서브미션에서 submit-success 이벤트 발생 시 호출.
			 * 통신이 성공하면 발생합니다.
			 */
			function onBoardSubSubmitSuccess(e){
				var boardSub = e.control;
				alert("게시글 등록 완료");
				app.close();
			};
			// End - User Script
			
			// Header
			var dataMap_1 = new cpr.data.DataMap("boardInsertParam");
			dataMap_1.parseData({
				"columns" : [
					{"name": "freeBoardTitle"},
					{"name": "freeBoardContent"},
					{"name": "freeBoardFileName"}
				]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("boardSub");
			submission_1.action = "member/boards";
			submission_1.addRequestData(dataMap_1);
			if(typeof onBoardSubSubmitSuccess == "function") {
				submission_1.addEventListener("submit-success", onBoardSubSubmitSuccess);
			}
			app.register(submission_1);
			app.supportMedia("all and (min-width: 1920px)", "Project");
			app.supportMedia("all and (min-width: 1024px) and (max-width: 1919px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container();
			var formLayout_1 = new cpr.controls.layouts.FormLayout();
			formLayout_1.scrollable = false;
			formLayout_1.topMargin = "5px";
			formLayout_1.rightMargin = "5px";
			formLayout_1.bottomMargin = "5px";
			formLayout_1.leftMargin = "5px";
			formLayout_1.horizontalSpacing = "10px";
			formLayout_1.verticalSpacing = "10px";
			formLayout_1.setColumns(["100px", "1fr"]);
			formLayout_1.setRows(["1fr"]);
			group_1.setLayout(formLayout_1);
			(function(container){
				var output_1 = new cpr.controls.Output();
				output_1.value = "내용";
				container.addChild(output_1, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var inputBox_1 = new cpr.controls.InputBox("ipb1");
				var dataMapContext_1 = new cpr.bind.DataMapContext(app.lookup("boardInsertParam"));
				inputBox_1.setBindContext(dataMapContext_1);
				inputBox_1.bind("value").toDataMap(app.lookup("boardInsertParam"), "freeBoardContent");
				container.addChild(inputBox_1, {
					"colIndex": 1,
					"rowIndex": 0
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "160px",
				"right": "20px",
				"bottom": "200px",
				"left": "20px"
			});
			
			var button_1 = new cpr.controls.Button();
			button_1.value = "취소";
			if(typeof onButtonClick == "function") {
				button_1.addEventListener("click", onButtonClick);
			}
			container.addChild(button_1, {
				"bottom": "20px",
				"left": "660px",
				"width": "200px",
				"height": "50px"
			});
			
			var button_2 = new cpr.controls.Button();
			button_2.value = "등록";
			if(typeof onButtonClick2 == "function") {
				button_2.addEventListener("click", onButtonClick2);
			}
			container.addChild(button_2, {
				"right": "660px",
				"bottom": "20px",
				"width": "200px",
				"height": "50px"
			});
			
			var group_2 = new cpr.controls.Container();
			var formLayout_2 = new cpr.controls.layouts.FormLayout();
			formLayout_2.scrollable = false;
			formLayout_2.topMargin = "5px";
			formLayout_2.rightMargin = "5px";
			formLayout_2.bottomMargin = "5px";
			formLayout_2.leftMargin = "5px";
			formLayout_2.horizontalSpacing = "10px";
			formLayout_2.verticalSpacing = "10px";
			formLayout_2.setColumns(["100px", "1fr"]);
			formLayout_2.setRows(["1fr"]);
			group_2.setLayout(formLayout_2);
			(function(container){
				var output_2 = new cpr.controls.Output();
				output_2.value = "제목";
				container.addChild(output_2, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var inputBox_2 = new cpr.controls.InputBox("ipb2");
				var dataMapContext_2 = new cpr.bind.DataMapContext(app.lookup("boardInsertParam"));
				inputBox_2.setBindContext(dataMapContext_2);
				inputBox_2.bind("value").toDataMap(app.lookup("boardInsertParam"), "freeBoardTitle");
				container.addChild(inputBox_2, {
					"colIndex": 1,
					"rowIndex": 0
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "90px",
				"right": "20px",
				"left": "20px",
				"height": "50px"
			});
			
			var group_3 = new cpr.controls.Container();
			var formLayout_3 = new cpr.controls.layouts.FormLayout();
			formLayout_3.scrollable = false;
			formLayout_3.topMargin = "5px";
			formLayout_3.rightMargin = "5px";
			formLayout_3.bottomMargin = "5px";
			formLayout_3.leftMargin = "5px";
			formLayout_3.horizontalSpacing = "10px";
			formLayout_3.verticalSpacing = "10px";
			formLayout_3.setColumns(["100px", "1fr"]);
			formLayout_3.setRows(["1fr"]);
			group_3.setLayout(formLayout_3);
			(function(container){
				var output_3 = new cpr.controls.Output();
				output_3.value = "파일첨부";
				container.addChild(output_3, {
					"colIndex": 0,
					"rowIndex": 0
				});
				var fileInput_1 = new cpr.controls.FileInput("fi1");
				var dataMapContext_3 = new cpr.bind.DataMapContext(app.lookup("boardInsertParam"));
				fileInput_1.setBindContext(dataMapContext_3);
				fileInput_1.bind("value").toDataMap(app.lookup("boardInsertParam"), "freeBoardFileName");
				container.addChild(fileInput_1, {
					"colIndex": 1,
					"rowIndex": 0
				});
			})(group_3);
			container.addChild(group_3, {
				"right": "20px",
				"bottom": "120px",
				"left": "20px",
				"height": "50px"
			});
			
			var output_4 = new cpr.controls.Output();
			output_4.value = "게시글 작성";
			container.addChild(output_4, {
				"top": "20px",
				"right": "1060px",
				"left": "20px",
				"height": "50px"
			});
			if(typeof onBodyInit == "function"){
				app.addEventListener("init", onBodyInit);
			}
		}
	});
	app.title = "게시글 작성";
	cpr.core.Platform.INSTANCE.register(app);
})();
