/*
 * App URI: admin/AdminSchedule
 * Source Location: admin/AdminSchedule.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.4584), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("admin/AdminSchedule", { 
		onPrepare: function(loader) {
			loader.addCSS("theme/controls/calendar.part.css");
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(e) {
				app.lookup("scheduleListSub").send();
			}

			/*
			 * 서브미션에서 submit-success 이벤트 발생 시 호출.
			 * 통신이 성공하면 발생합니다.
			 */
			function onScheduleListSubSubmitSuccess(e) {
				var scheduleListSub = e.control;
				var calendar = app.lookup("crd");
				var dsAnnualLeavesList = app.lookup("annualLeavesList");
				var dsProjectScheduleList = app.lookup("projectScheduleList");
				var jsonData = JSON.parse(scheduleListSub.xhr.responseText);
				var annualLeavesList = jsonData.annualLeavesList;
				var projectScheduleList = jsonData.projectScheduleList;
				
				// annualLeavesList 순회
				for (var i = 0; i < annualLeavesList.length; i++) {
					var memberName = annualLeavesList[i].memberName;
					var leaveRequestType = annualLeavesList[i].leaveRequestType;
					var leaveRequestStart = annualLeavesList[i].leaveRequestStart;
					var leaveRequestEnd = annualLeavesList[i].leaveRequestEnd;
					console.log(memberName);
					console.log(leaveRequestType);
					console.log(leaveRequestStart);
					console.log(leaveRequestEnd);
					calendar.addItem(new cpr.controls.CalendarItem(memberName, new Date(leaveRequestStart), new Date(leaveRequestEnd), leaveRequestType));
				}
				// projectScheduleList 순회
				for (var i = 0; i < projectScheduleList.length; i++) {
					var memberName = projectScheduleList[i].memberName;
					var projectName = projectScheduleList[i].projectName;
					var projectStart = projectScheduleList[i].projectStart;
					var projectEnd = projectScheduleList[i].projectEnd;
					console.log(memberName);
					console.log(projectName);
					console.log(projectStart);
					console.log(projectEnd);
					calendar.addItem(new cpr.controls.CalendarItem(memberName, new Date(projectStart), new Date(projectEnd), projectName));
				}
			}
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("annualLeavesList");
			dataSet_1.parseData({
				"columns" : [
					{"name": "memberName"},
					{"name": "leaveRequestType"},
					{"name": "leaveRequestStart"},
					{"name": "leaveRequestEnd"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("projectScheduleList");
			dataSet_2.parseData({
				"columns" : [
					{"name": "memberName"},
					{"name": "projectName"},
					{"name": "projectStart"},
					{"name": "projectEnd"}
				]
			});
			app.register(dataSet_2);
			var submission_1 = new cpr.protocols.Submission("scheduleListSub");
			submission_1.method = "get";
			submission_1.action = "admin/schedules";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			if(typeof onScheduleListSubSubmitSuccess == "function") {
				submission_1.addEventListener("submit-success", onScheduleListSubSubmitSuccess);
			}
			app.register(submission_1);
			app.supportMedia("all and (min-width: 1920px)", "Project");
			app.supportMedia("all and (min-width: 1024px) and (max-width: 1919px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var tabFolder_1 = new cpr.controls.TabFolder();
			
			var tabItem_1 = (function(tabFolder){
				var tabItem_1 = new cpr.controls.TabItem();
				tabItem_1.text = "일정관리";
				var group_1 = new cpr.controls.Container();
				var xYLayout_2 = new cpr.controls.layouts.XYLayout();
				group_1.setLayout(xYLayout_2);
				(function(container){
					var calendar_1 = new cpr.controls.Calendar("crd");
					calendar_1.style.setClasses(["admin_carlendar"]);
					calendar_1.style.item.css({
						"color" : "#663399",
						"font-size" : "13px"
					});
					calendar_1.style.item.bind("background-color").toExpression("value == \"연차\" ? \"rgb(248,204,215)\" : \"rgb(240,182,151)\"");
					if(typeof onCalendarDateClick == "function") {
						calendar_1.addEventListener("date-click", onCalendarDateClick);
					}
					if(typeof onCrdItemClick == "function") {
						calendar_1.addEventListener("item-click", onCrdItemClick);
					}
					container.addChild(calendar_1, {
						"top": "0px",
						"right": "0px",
						"bottom": "0px",
						"left": "0px"
					});
				})(group_1);
				tabItem_1.content = group_1;
				return tabItem_1;
			})(tabFolder_1);
			tabFolder_1.addTabItem(tabItem_1);
			tabFolder_1.setSelectedTabItem(tabItem_1);
			container.addChild(tabFolder_1, {
				"top": "0px",
				"right": "0px",
				"bottom": "0px",
				"left": "0px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "AdminSchedule";
	cpr.core.Platform.INSTANCE.register(app);
})();
