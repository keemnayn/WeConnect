/*
 * App URI: admin/AdminSchedule
 * Source Location: admin/AdminSchedule.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.4584), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("admin/AdminSchedule", { 
		onPrepare: function(loader) {
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(e) {
				/** 
				 * @type cpr.controls.Calendar
				 */
				let calendar = app.lookup("crd");
				let dataSet = app.lookup("project");
				var submission = app.lookup("calrendar");
				submission.send();
				var date = e.targetObject.date;
				var voCalendarItems = calendar.getItemsByDate(dataSet); //1.0.2210(2020.07.10릴리즈) 부터 사용가능
				var voAnniversaries = calendar.getAnniversariesByDate(date);
				
				var voInitValue = {
					date: moment(date).format("YYYY-MM-DD"),
					item: voCalendarItems,
					anniversary: voAnniversaries
				};
				/*
				 * 서브미션에서 submit-progress 이벤트 발생 시 호출.
				 * 서버로 부터 일정 크기의 데이터를 전송받았을 때 발생합니다. 하나의 응답에 대해 여러 번 발생할 수 있습니다.
				 */
				function onCalrendarSubmitProgress(e) {
					var calrendar = e.control;
					alert("성공");
					app.lookup("crd").redraw();
					
				}
			}
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("room");
			dataSet_1.parseData({
				"columns": [{"name": "room"}],
				"rows": [
					{"room": "8층 대회의실"},
					{"room": "8층 소회의실"},
					{"room": "6층 소회의실"},
					{"room": "5층 대회의실"},
					{"room": "5층 소회의실"},
					{"room": "접견실"}
				]
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("time");
			dataSet_2.parseData({
				"columns": [{
					"name": "time",
					"dataType": "string"
				}],
				"rows": [
					{"time": "9:00"},
					{"time": "10:00"},
					{"time": "11:00"},
					{"time": "12:00"},
					{"time": "13:00"},
					{"time": "14:00"},
					{"time": "15:00"},
					{"time": "16:00"},
					{"time": "17:00"},
					{"time": "18:00"},
					{"time": "19:00"},
					{"time": "20:00"}
				]
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("project");
			dataSet_3.parseData({
				"columns" : [
					{
						"name": "projectStart",
						"dataType": "string"
					},
					{
						"name": "projectEnd",
						"dataType": "string"
					},
					{"name": "label"},
					{"name": "value"}
				]
			});
			app.register(dataSet_3);
			var submission_1 = new cpr.protocols.Submission("calrendar");
			submission_1.method = "get";
			submission_1.action = "admin/carlendar";
			submission_1.addResponseData(dataSet_3, false);
			if(typeof onCalrendarSubmitProgress == "function") {
				submission_1.addEventListener("submit-progress", onCalrendarSubmitProgress);
			}
			app.register(submission_1);
			app.supportMedia("all and (min-width: 1920px)", "Project");
			app.supportMedia("all and (min-width: 1024px) and (max-width: 1919px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var tabFolder_1 = new cpr.controls.TabFolder();
			
			var tabItem_1 = (function(tabFolder){
				var tabItem_1 = new cpr.controls.TabItem();
				tabItem_1.text = "일정관리";
				var group_1 = new cpr.controls.Container();
				var xYLayout_2 = new cpr.controls.layouts.XYLayout();
				group_1.setLayout(xYLayout_2);
				(function(container){
					var calendar_1 = new cpr.controls.Calendar("crd");
					calendar_1.style.setClasses(["admin_carlendar"]);
					calendar_1.style.item.bind("color").toExpression([
						"switch(label){",
						"\tcase \"주간보고\": \"violet\"",
						"\tcase \"외부\": \"red\"",
						"\tcase \"연차\": \"orange\"",
						"\tcase \"보고\": \"blue\"",
						"\tcase \"교육\": \"green\"",
						"\tcase \"기타\": \"gray\"",
						"}"
					].join("\n"));
					if(typeof onCalendarDateClick == "function") {
						calendar_1.addEventListener("date-click", onCalendarDateClick);
					}
					if(typeof onCrdItemClick == "function") {
						calendar_1.addEventListener("item-click", onCrdItemClick);
					}
					container.addChild(calendar_1, {
						"top": "0px",
						"right": "0px",
						"bottom": "0px",
						"left": "0px"
					});
				})(group_1);
				tabItem_1.content = group_1;
				return tabItem_1;
			})(tabFolder_1);
			tabFolder_1.addTabItem(tabItem_1);
			tabFolder_1.setSelectedTabItem(tabItem_1);
			container.addChild(tabFolder_1, {
				"top": "0px",
				"right": "0px",
				"bottom": "0px",
				"left": "0px"
			});
			if(typeof onBodyInit == "function"){
				app.addEventListener("init", onBodyInit);
			}
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "AdminSchedule";
	cpr.core.Platform.INSTANCE.register(app);
})();
