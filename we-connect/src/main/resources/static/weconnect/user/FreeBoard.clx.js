/*
 * App URI: user/FreeBoard
 * Source Location: user/FreeBoard.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.4584), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("user/FreeBoard", { 
		onPrepare: function(loader) {
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * board.js
			 * Created at 2023. 8. 8. 오후 3:41:40.
			 *
			 * @author chwec
			 ************************************************/

			/*
			 * 루트 컨테이너에서 init 이벤트 발생 시 호출.
			 * 앱이 최초 구성될 때 발생하는 이벤트 입니다.
			 */
			function onBodyInit(e){
				app.lookup("boardListSub").send();
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("boardList");
			dataSet_1.parseData({
				"columns": [
					{
						"name": "freeBoardId",
						"dataType": "number"
					},
					{
						"name": "freeBoardTitle",
						"dataType": "string"
					},
					{
						"name": "memberName",
						"dataType": "string"
					},
					{
						"name": "TO_CHAR(freeBoardCreate,'YYYY-MM-DD')",
						"dataType": "string"
					}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("search");
			dataSet_2.parseData({
				"columns": [{"name": "type"}],
				"rows": [
					{"type": "전체"},
					{"type": "내용"},
					{"type": "작성자"}
				]
			});
			app.register(dataSet_2);
			var submission_1 = new cpr.protocols.Submission("boardListSub");
			submission_1.method = "get";
			submission_1.action = "board.do";
			submission_1.addResponseData(dataSet_1, false);
			app.register(submission_1);
			app.supportMedia("all and (min-width: 1920px)", "Project");
			app.supportMedia("all and (min-width: 1024px) and (max-width: 1919px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"line-height" : "0px",
				"font-size" : "30px",
				"width" : "100%",
				"height" : "100%",
				"font-weight" : "bold"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var grid_1 = new cpr.controls.Grid("grd1");
			grid_1.init({
				"dataSet": app.lookup("boardList"),
				"columns": [
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"}
				],
				"header": {
					"rows": [{"height": "50px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
								cell.targetColumnName = "freeBoardId";
								cell.text = "번호";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
								cell.targetColumnName = "freeBoardTitle";
								cell.text = "제목";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
								cell.targetColumnName = "memberName";
								cell.text = "작성자";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
								cell.targetColumnName = "TO_CHAR(freeBoardCreate,'YYYY-MM-DD')";
								cell.text = "등록일자";
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "50px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.columnName = "freeBoardId";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.columnName = "freeBoardTitle";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.columnName = "memberName";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.columnName = "TO_CHAR(freeBoardCreate,'YYYY-MM-DD')";
							}
						}
					]
				}
			});
			container.addChild(grid_1, {
				"top": "80px",
				"right": "0px",
				"bottom": "100px",
				"left": "0px"
			});
			
			var pageIndexer_1 = new cpr.controls.PageIndexer();
			pageIndexer_1.init(1, 1, 1);
			container.addChild(pageIndexer_1, {
				"bottom": "50px",
				"left": "290px",
				"width": "1000px",
				"height": "51px"
			});
			
			var searchInput_1 = new cpr.controls.SearchInput();
			container.addChild(searchInput_1, {
				"top": "40px",
				"right": "0px",
				"width": "560px",
				"height": "30px"
			});
			
			var comboBox_1 = new cpr.controls.ComboBox("cmb1");
			comboBox_1.value = "전체";
			(function(comboBox_1){
				comboBox_1.setItemSet(app.lookup("search"), {
					"label": "type",
					"value": "type"
				});
			})(comboBox_1);
			container.addChild(comboBox_1, {
				"top": "40px",
				"right": "560px",
				"width": "100px",
				"height": "30px"
			});
			if(typeof onBodyInit == "function"){
				app.addEventListener("init", onBodyInit);
			}
		}
	});
	app.title = "FreeBoard";
	cpr.core.Platform.INSTANCE.register(app);
})();
