/*
 * App URI: login/Login
 * Source Location: login/Login.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.4584), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("login/Login", { 
		onPrepare: function(loader) {
			loader.addCSS("theme/controls/login.css");
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * Untitled.js
			 * Created at 2023. 8. 7. 오전 10:08:50.
			 *
			 * @author kjh970605
			 ************************************************/

			/*
			 * "회원가입" 버튼(registerBtn)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onRegisterBtnClick(e) {
				var registerBtn = e.control;
				window.location.href = "register";
			}

			/**
			 * "로그인" 버튼(loginBtn)에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onLoginBtnClick(e) {
				let memberEmail = app.lookup("memberEmailIpb").value;
				let memberPassword = app.lookup("memberPasswordIpb").value;
				// Check if email and password are either null or empty
				if (isEmptyOrNull(memberEmail) || isEmptyOrNull(memberPassword)) {
					alert("이메일과 비밀번호를 입력해주세요");
					return;
				}
				let submission = app.lookup("loginSub");
				submission.send();
			}
			// 이메일 비밀번호 공란인지 확인
			function isEmptyOrNull(value) {
				return value === null || value.trim() === "";
			}

			/*
			 * 서브미션에서 submit-success 이벤트 발생 시 호출.
			 * 통신이 성공하면 발생합니다.
			 */
			function onLoginSubSubmitSuccess(e) {
				var submission = e.control;
				
				var redirectUrl = submission.getMetadata("url");
				var isSuccessLogin = submission.getMetadata("login");
				
				if (redirectUrl !== null && isSuccessLogin === true) {
					window.location = redirectUrl;
				}
			}

			/*
			 * 서브미션에서 submit-error 이벤트 발생 시 호출.
			 * 통신 중 문제가 생기면 발생합니다.
			 */
			function onLoginSubSubmitError(e) {
				var loginSub = e.control;
				var submission = app.lookup("loginSub");
				var error = submission.getMetadata("error");
				alert(error);
			}

			/*
			 * 인풋 박스에서 keydown 이벤트 발생 시 호출.
			 * 사용자가 키를 누를 때 발생하는 이벤트. 키코드 관련 상수는 {@link cpr.events.KeyCode}에서 참조할 수 있습니다.
			 */
			function onMemberPasswordIpbKeydown(e) {
				var memberPasswordIpb = e.control;
				if (e.keyCode == cpr.events.KeyCode.ENTER) {
					app.lookup("loginBtn").click();
				}
			}

			/*
			 * 인풋 박스에서 focus 이벤트 발생 시 호출.
			 * 컨트롤이 포커스를 획득한 후 발생하는 이벤트.
			 */
			function onMemberPasswordIpbFocus(e) {
				var memberPasswordIpb = e.control;
				memberPasswordIpb.autoSelect = true;
			}
			// End - User Script
			
			// Header
			var dataMap_1 = new cpr.data.DataMap("loginParam");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "memberEmail",
						"dataType": "string"
					},
					{
						"name": "memberPassword",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("loginSub");
			submission_1.action = "login/login";
			submission_1.addRequestData(dataMap_1);
			if(typeof onLoginSubSubmitSuccess == "function") {
				submission_1.addEventListener("submit-success", onLoginSubSubmitSuccess);
			}
			if(typeof onLoginSubSubmitError == "function") {
				submission_1.addEventListener("submit-error", onLoginSubSubmitError);
			}
			app.register(submission_1);
			app.supportMedia("all and (min-width: 1920px)", "new-screen");
			app.supportMedia("all and (min-width: 1024px) and (max-width: 1919px)", "default");
			app.supportMedia("all and (min-width: 500px) and (max-width: 1023px)", "tablet");
			app.supportMedia("all and (max-width: 499px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.setClasses(["Background"]);
			container.style.css({
				"background-color" : "#F8F8F8",
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container();
			group_1.style.setClasses(["login_layout"]);
			group_1.style.css({
				"border-right-style" : "solid",
				"border-radius" : "9px",
				"background-color" : "#F7F7F7",
				"border-left-style" : "solid",
				"vertical-align" : "middle",
				"border-bottom-style" : "solid",
				"border-top-style" : "solid"
			});
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var inputBox_1 = new cpr.controls.InputBox("memberEmailIpb");
				inputBox_1.placeholder = "아이디";
				inputBox_1.style.setClasses(["input_id"]);
				inputBox_1.style.css({
					"border-radius" : "8px",
					"background-color" : "#FFFFFF",
					"color" : "#080808",
					"font-size" : "1em",
					"text-align" : "left"
				});
				inputBox_1.bind("value").toDataMap(app.lookup("loginParam"), "memberEmail");
				if(typeof onMemberEmailIpbFocus == "function") {
					inputBox_1.addEventListener("focus", onMemberEmailIpbFocus);
				}
				container.addChild(inputBox_1, {
					"top": "164px",
					"left": "90px",
					"width": "420px",
					"height": "50px"
				});
				var inputBox_2 = new cpr.controls.InputBox("memberPasswordIpb");
				inputBox_2.secret = true;
				inputBox_2.placeholder = "비밀번호";
				inputBox_2.style.setClasses(["input_password"]);
				inputBox_2.style.css({
					"border-radius" : "8px",
					"background-color" : "#FFFFFF",
					"color" : "#080808",
					"font-size" : "1em",
					"text-align" : "left"
				});
				inputBox_2.bind("value").toDataMap(app.lookup("loginParam"), "memberPassword");
				if(typeof onMemberPasswordIpbKeydown == "function") {
					inputBox_2.addEventListener("keydown", onMemberPasswordIpbKeydown);
				}
				if(typeof onMemberPasswordIpbFocus == "function") {
					inputBox_2.addEventListener("focus", onMemberPasswordIpbFocus);
				}
				container.addChild(inputBox_2, {
					"top": "225px",
					"left": "90px",
					"width": "420px",
					"height": "50px"
				});
				var button_1 = new cpr.controls.Button("loginBtn");
				button_1.value = "로그인";
				button_1.style.setClasses(["btn_login"]);
				button_1.style.css({
					"background-color" : "#4680FF",
					"border-radius" : "8px",
					"color" : "#FFFFFF",
					"font-weight" : "600",
					"font-size" : "16px",
					"background-image" : "none",
					"text-align" : "center"
				});
				if(typeof onLoginBtnClick == "function") {
					button_1.addEventListener("click", onLoginBtnClick);
				}
				container.addChild(button_1, {
					"top": "334px",
					"left": "90px",
					"width": "420px",
					"height": "39px"
				});
				var button_2 = new cpr.controls.Button("registerBtn");
				button_2.value = "회원가입";
				button_2.style.setClasses(["btn_register"]);
				button_2.style.css({
					"background-color" : "#4D5B67",
					"border-radius" : "8px",
					"color" : "#FFFFFF",
					"font-weight" : "900",
					"font-size" : "16px",
					"text-align" : "center"
				});
				if(typeof onRegisterBtnClick == "function") {
					button_2.addEventListener("click", onRegisterBtnClick);
				}
				container.addChild(button_2, {
					"top": "385px",
					"left": "90px",
					"width": "420px",
					"height": "40px"
				});
				var image_1 = new cpr.controls.Image();
				image_1.src = "img/loginLogo.png";
				container.addChild(image_1, {
					"top": "49px",
					"left": "93px",
					"width": "411px",
					"height": "80px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "206px",
				"left": "662px",
				"width": "600px",
				"height": "500px"
			});
			if(typeof onBodyInit2 == "function"){
				app.addEventListener("init", onBodyInit2);
			}
		}
	});
	app.title = "Login";
	cpr.core.Platform.INSTANCE.register(app);
})();
